# need to install pandas & bs4
import pandas as pd
from bs4 import BeautifulSoup

import os
from scanner import Masscan_Scanner
from parsers import Masscan_Parser_Class

run = True
while run:
    try:
        # request user for the filepath for the baseline HTML report 
        htmlFilePath = input("Enter the file path for the baseline HTML report: ")

        # retrieve the html file content
        with open(htmlFilePath, 'r') as file:
            html = file.read()

        # Initialising list of dictionary for baseline_list
        baseline_list = []
        dict_keys = ["IP", "Port"]
        baseline_dict = {key: [] for key in dict_keys}

        # Parse the html content and retrieve the first table
        soup = BeautifulSoup(html, 'html.parser')
        table = soup.find_all('table')[0]

        #  Populate baseline_list
        row_counter = 0
        for row in table.find_all('tr'):
            if row_counter == 0:
                row_counter += 1
                continue
            column_counter = 0                   
            columns = row.find_all('td')
            for column in columns:
                if column_counter == 0:
                    column_counter += 1
                    continue
                elif column_counter == 1:
                    baseline_dict["IP"] = column.get_text()
                    column_counter += 1
                    continue
                elif column_counter == 2:
                    baseline_dict["Port"] = list(column.get_text().split(","))
                    break

            baseline_dict_copy = baseline_dict.copy()
            baseline_list.append(baseline_dict_copy)
        # print(baseline_list)

        # run masscan again
        print("Please enter the following to run masscan.")
        masscan_file_prefix = input(
            "Enter the Prefix for the Post-Exploitation Report file (default = 'post-exploitation-scan-') : ") or "post-exploitation-scan-"
        masscan_binary_path = input(
            "Enter Masscan application path (default = 'masscan') : ") or "masscan"
        masscan_max_rate = input(
            "Masscan max rate in pps (default = 100) : ") or "100"
        masscan_wait_time = input(
            "Masscan wait time (default = 30) : ") or "30"
        masscan_output_dir = input(
            "Directory for the Post-Exploitation output files (default = 'post-exploitation-results/') : ") or "post-exploitation-results/"
        if not os.path.exists(masscan_output_dir):
            os.makedirs(masscan_output_dir)
        ip_target_range = input("Enter IP range with CIDR : ")
        scanner = Masscan_Scanner.Masscan(target=ip_target_range,
                                          prefix=masscan_file_prefix,
                                          binary=masscan_binary_path,
                                          max_rate=masscan_max_rate,
                                          outdir=masscan_output_dir,
                                          wait_time=masscan_wait_time)



        # store the result in a post_exploitation_list

        # compare post_exploitation_list against baseline_list

        # store the new findings in report_list (which will be used in report generation)

        run = False
    except OSError as e:
        print(e)
        run = True